/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "TCI-CommonTypes"
 * 	found in "TCI.asn1"
 * 	`asn1c -no-gen-PER -fcompound-names -fwide-types`
 */

#ifndef	_ExceptionId_H_
#define	_ExceptionId_H_


#include <asn_application.h>

/* Including external dependencies */
#include <ENUMERATED.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ExceptionId {
	ExceptionId_reserved	= 0,
	ExceptionId_critical_error	= 1,
	ExceptionId_incorrect_parameter_value	= 2,
	ExceptionId_missing_parameter	= 3,
	ExceptionId_radio_interface_unavailable	= 4
	/*
	 * Enumeration is extensible
	 */
} e_ExceptionId;

/* ExceptionId */
typedef ENUMERATED_t	 ExceptionId_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_ExceptionId;
extern const asn_INTEGER_specifics_t asn_SPC_ExceptionId_specs_1;
asn_struct_free_f ExceptionId_free;
asn_struct_print_f ExceptionId_print;
asn_constr_check_f ExceptionId_constraint;
ber_type_decoder_f ExceptionId_decode_ber;
der_type_encoder_f ExceptionId_encode_der;
xer_type_decoder_f ExceptionId_decode_xer;
xer_type_encoder_f ExceptionId_encode_xer;
oer_type_decoder_f ExceptionId_decode_oer;
oer_type_encoder_f ExceptionId_encode_oer;

#ifdef __cplusplus
}
#endif

#endif	/* _ExceptionId_H_ */
#include <asn_internal.h>
